:py:mod:`blackbody_params`
==========================

.. py:module:: blackbody_params


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   blackbody_params.bb_stellar_params




Attributes
~~~~~~~~~~

.. autoapisummary::

   blackbody_params.lambda_Ks
   blackbody_params.dlambda_Ks
   blackbody_params.ks_filt_info
   blackbody_params.v_filt_info
   blackbody_params.flux_ref_Ks
   blackbody_params.flux_ref_V
   blackbody_params.kp_filt
   blackbody_params.h_filt


.. py:data:: lambda_Ks

   

.. py:data:: dlambda_Ks

   

.. py:data:: ks_filt_info

   

.. py:data:: v_filt_info

   

.. py:data:: flux_ref_Ks

   

.. py:data:: flux_ref_V

   

.. py:data:: kp_filt

   

.. py:data:: h_filt

   

.. py:class:: bb_stellar_params(*args, **kwargs)


   Bases: :py:obj:`phitter.params.star_params.stellar_params_obj`

   
   stellar_params class, to derive stellar parameters from a blackbody atmosphere


   :Parameters:

       **ext_Ks** : float, default=2.63
           Extinction of stellar parameters object in Ks band.

       **dist** : Astropy Quantity, length units, default=7.971e3*u.pc
           Distance to object, specified during isochrone creation.

       **filts_list** : [filter], default=[filters.nirc2_kp_filt(), filters.nirc2_h_filt()]
           List of filters to compute synthetic photometry.

       **ext_law** : str, default='NL18'
           Choice of extinction law to use when computing synthetic photometry.
           Default is 'NL18', corresponding to Nogueras-Lara+ 2018.














   ..
       !! processed by numpydoc !!
   .. py:method:: calc_star_params(mass, rad, teff)

      
      Calculate stellar parameters from a blackbody, returned as a star_params
      object


      :Parameters:

          **mass** : Astropy Quantity, unit:solMass
              Stellar mass in solar masses

          **rad** : Astropy Quantity, unit:solRad
              Stellar radius in solar radii

          **teff** : Astropy Quantity, unit:K
              Stellar effective temperature in Kelvin

      :Returns:

          star_params
              star_params object returned, with stellar parameters based on a
              blackbody atmosphere and input stellar parameters.













      ..
          !! processed by numpydoc !!

   .. py:method:: get_bb_mags(bb_temp, bb_rad, diagnostic_plot=False)



