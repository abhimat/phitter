:py:mod:`phitter.lc_calc_2mass`
===============================

.. py:module:: phitter.lc_calc_2mass


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   phitter.lc_calc_2mass.single_star_lc
   phitter.lc_calc_2mass.binary_star_lc
   phitter.lc_calc_2mass.phased_obs
   phitter.lc_calc_2mass.dist_ext_mag_calc
   phitter.lc_calc_2mass.flux_adj
   phitter.lc_calc_2mass.binary_mags_calc



Attributes
~~~~~~~~~~

.. autoapisummary::

   phitter.lc_calc_2mass.lambda_Ks
   phitter.lc_calc_2mass.dlambda_Ks
   phitter.lc_calc_2mass.lambda_H
   phitter.lc_calc_2mass.dlambda_H
   phitter.lc_calc_2mass.ks_filt_info
   phitter.lc_calc_2mass.h_filt_info
   phitter.lc_calc_2mass.flux_ref_Ks
   phitter.lc_calc_2mass.flux_ref_H


.. py:data:: lambda_Ks

   

.. py:data:: dlambda_Ks

   

.. py:data:: lambda_H

   

.. py:data:: dlambda_H

   

.. py:data:: ks_filt_info

   

.. py:data:: h_filt_info

   

.. py:data:: flux_ref_Ks

   

.. py:data:: flux_ref_H

   

.. py:function:: single_star_lc(stellar_params, use_blackbody_atm=False, num_triangles=1500)


.. py:function:: binary_star_lc(star1_params, star2_params, binary_params, observation_times, use_blackbody_atm=False, make_mesh_plots=False, plot_name=None, print_diagnostics=False, par_compute=False, num_par_processes=8, num_triangles=1500)

   
   Compute the light curve for a binary system

   Keyword arguments:
   star1_params -- Tuple of parameters for the primary star
   star2_params -- Tuple of parameters for the secondary star
   binary_params -- Tuple of parameters for the binary system configuration
   observation_times -- Tuple of observation times,
       with numpy array of MJDs in each band
       (ks_MJDs, h_MJDs) = observation_times
   use_blackbody_atm -- Use blackbody atmosphere
       instead of default Castelli & Kurucz (default False)
   make_mesh_plots -- Make a mesh plot of the binary system (default False)
   plot_name
   print_diagnostics
   par_compute
   num_par_processes















   ..
       !! processed by numpydoc !!

.. py:function:: phased_obs(observation_times, binary_period, t0)


.. py:function:: dist_ext_mag_calc(input_mags, target_dist, Ks_ext, H_ext)


.. py:function:: flux_adj(mags_pri, mags_ref_pri, mags_sec, mags_ref_sec, mags_bin)

   
   Perform flux adjustment for binary magnitudes
   * Uses calculated and reference single star magnitudes for binary components
   * Derives adjustment to binary magnitude based on the discrepancy
   * Applies correction to the calculated binary magnitudes

   Keyword arguments:
   mags_pri -- Model calculated magnitudes (Ks, H) of primary
   mags_ref_pri -- Reference magnitudes (Ks, H) of primary
   mags_sec -- Model calculated magnitudes (Ks, H) of secondary
   mags_ref_sec -- Reference magnitudes (Ks, H) of secondary
   mags_bin -- Model calculated magnitudes ([Ks], [H]) of the binary system















   ..
       !! processed by numpydoc !!

.. py:function:: binary_mags_calc(star1_params_lcfit, star2_params_lcfit, binary_params, observation_times, isoc_Ks_ext, Ks_ext, H_ext, ext_alpha, isoc_dist, bin_dist, use_blackbody_atm=False, make_mesh_plots=False, plot_name=None, num_triangles=1500, print_diagnostics=False)


